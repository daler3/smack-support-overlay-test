--- smack_lsm2.c	2017-01-13 14:30:50.000000000 +0100
+++ smack_lsm2_copia.c	2017-02-03 19:32:41.000000000 +0100
@@ -4611,6 +4611,63 @@
 	return 0;
 }
 
+static int smack_inode_copy_up(struct dentry *dentry, struct cred **new)
+{
+
+	struct task_smack *tsp;
+	struct smack_known *skp;
+	struct inode_smack *isp;
+	struct cred *new_creds = *new; 
+
+	if (new_creds == NULL) {
+		new_creds = prepare_creds(); 
+		if (new_creds == NULL){
+			return -ENOMEM;
+		}
+	}
+
+	tsp = new_creds->security; 
+
+	/* 
+	 * Get label from overlay inode and set it in create_sid 
+	 */
+	isp = d_inode(dentry->d_parent)->i_security;
+	skp = isp->smk_inode;
+	tsp->smk_task = skp;
+	*new = new_creds;
+	return 0;
+}
+
+static int smack_inode_copy_up_xattr(const char *name)
+{
+	/*
+	* Return 1 if this is not a Smack attribute
+	* as specified in the hook API.
+	*/
+	if (strcmp(name, XATTR_NAME_SMACK) == 0){ 
+		return 1; 
+	}
+ 
+	return -EOPNOTSUPP;
+}
+
+static int smack_dentry_create_files_as(struct dentry *dentry, int mode,
+					struct qstr *name, 
+					const struct cred *old, 
+				 	struct cred *new)
+{
+	
+	struct task_smack *tsp;
+	struct smack_known *skp;
+	struct inode_smack *isp;
+
+	tsp = new->security;
+	isp = d_inode(dentry->d_parent)->i_security;
+	skp = isp->smk_inode;
+	tsp->smk_task = skp;
+	return 0;
+}
+
 static struct security_hook_list smack_hooks[] = {
 	LSM_HOOK_INIT(ptrace_access_check, smack_ptrace_access_check),
 	LSM_HOOK_INIT(ptrace_traceme, smack_ptrace_traceme),
@@ -4749,6 +4806,9 @@
 	LSM_HOOK_INIT(inode_notifysecctx, smack_inode_notifysecctx),
 	LSM_HOOK_INIT(inode_setsecctx, smack_inode_setsecctx),
 	LSM_HOOK_INIT(inode_getsecctx, smack_inode_getsecctx),
+	LSM_HOOK_INIT(inode_copy_up, smack_inode_copy_up),
+	LSM_HOOK_INIT(inode_copy_up_xattr, smack_inode_copy_up_xattr),
+	LSM_HOOK_INIT(dentry_create_files_as, smack_dentry_create_files_as),
 };
 
 
